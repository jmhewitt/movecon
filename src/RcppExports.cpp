// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "movecon_types.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// TestDirectionalCovariate
double TestDirectionalCovariate(std::string x, std::string y);
RcppExport SEXP _movecon_TestDirectionalCovariate(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(TestDirectionalCovariate(x, y));
    return rcpp_result_gen;
END_RCPP
}
// build_statespace
Rcpp::XPtr<RookDirectionalStatespace> build_statespace(Rcpp::NumericVector& eastings, Rcpp::NumericVector& northings, Rcpp::NumericMatrix& covariates, Rcpp::NumericVector& linear_constraint);
RcppExport SEXP _movecon_build_statespace(SEXP eastingsSEXP, SEXP northingsSEXP, SEXP covariatesSEXP, SEXP linear_constraintSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type eastings(eastingsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type northings(northingsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type linear_constraint(linear_constraintSEXP);
    rcpp_result_gen = Rcpp::wrap(build_statespace(eastings, northings, covariates, linear_constraint));
    return rcpp_result_gen;
END_RCPP
}
// extract_statespace_location
Rcpp::List extract_statespace_location(Rcpp::XPtr<RookDirectionalStatespace> statespace, std::size_t easting_ind, std::size_t northing_ind);
RcppExport SEXP _movecon_extract_statespace_location(SEXP statespaceSEXP, SEXP easting_indSEXP, SEXP northing_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<RookDirectionalStatespace> >::type statespace(statespaceSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type easting_ind(easting_indSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type northing_ind(northing_indSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_statespace_location(statespace, easting_ind, northing_ind));
    return rcpp_result_gen;
END_RCPP
}
// extract_statespace_state
Rcpp::List extract_statespace_state(Rcpp::XPtr<RookDirectionalStatespace> statespace, std::string last_movement_direction, std::size_t easting_ind, std::size_t northing_ind);
RcppExport SEXP _movecon_extract_statespace_state(SEXP statespaceSEXP, SEXP last_movement_directionSEXP, SEXP easting_indSEXP, SEXP northing_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<RookDirectionalStatespace> >::type statespace(statespaceSEXP);
    Rcpp::traits::input_parameter< std::string >::type last_movement_direction(last_movement_directionSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type easting_ind(easting_indSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type northing_ind(northing_indSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_statespace_state(statespace, last_movement_direction, easting_ind, northing_ind));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_movecon_TestDirectionalCovariate", (DL_FUNC) &_movecon_TestDirectionalCovariate, 2},
    {"_movecon_build_statespace", (DL_FUNC) &_movecon_build_statespace, 4},
    {"_movecon_extract_statespace_location", (DL_FUNC) &_movecon_extract_statespace_location, 3},
    {"_movecon_extract_statespace_state", (DL_FUNC) &_movecon_extract_statespace_state, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_movecon(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
